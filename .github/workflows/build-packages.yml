name: Build Packages

on:
  release:
    types: [created]

env:
  PYTHON_VERSION: '3.10'
  PACKAGE_NAME: hashreport
  VENV_PATH: .venv
  PYTHONPATH: ${{ github.workspace }}

jobs:
  build-rpm:
    name: Build RPM Package
    runs-on: ubuntu-latest
    container:
      image: fedora:latest

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          dnf update -y
          dnf install -y \
            python3 \
            python3-devel \
            python3-pip \
            python3-setuptools \
            rpm-build \
            rpmdevtools \
            git

      - name: Set up Python environment
        run: |
          python3 -m venv $VENV_PATH
          . $VENV_PATH/bin/activate
          pip install --upgrade pip wheel setuptools
          pip install poetry tomli
          pip install -e .

      - name: Set up RPM build environment
        id: rpm-setup
        run: |
          echo "Setting up RPM build environment..."
          rpmdev-setuptree
          cp tools/rpm/genspec.py .
          python3 genspec.py || exit 1
          cp hashreport.spec ~/rpmbuild/SPECS/ || exit 1

          # Initialize git repo for source archive
          git config --global init.defaultBranch main
          git init
          git add .
          git config --global user.email "ci@example.com"
          git config --global user.name "CI"
          git commit -m "Build commit"

          # Create source archive
          echo "Creating source archive..."
          git archive --format=tar.gz \
            --prefix=${PACKAGE_NAME}-${GITHUB_REF#refs/tags/v}/ \
            -o ~/rpmbuild/SOURCES/${PACKAGE_NAME}-${GITHUB_REF#refs/tags/v}.tar.gz HEAD

      - name: Build RPM package
        id: rpm-build
        run: |
          echo "Building RPM package..."
          rpmbuild -ba ~/rpmbuild/SPECS/${PACKAGE_NAME}.spec
          echo "RPM build completed"

      - name: Upload packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rpm-packages
          path: |
            ~/rpmbuild/RPMS/noarch/*.rpm
            ~/rpmbuild/SRPMS/*.rpm

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ~/rpmbuild/RPMS/noarch/*.rpm
            ~/rpmbuild/SRPMS/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-deb:
    name: Build DEB Package
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y \
            build-essential \
            debhelper \
            devscripts \
            dh-python \
            python3-all \
            python3-pip \
            python3-venv \
            curl \
            git

      - name: Set up Python environment
        run: |
          python3 -m venv $VENV_PATH
          . $VENV_PATH/bin/activate
          pip install --upgrade pip wheel setuptools
          pip install poetry tomli
          pip install -e .

      - name: Set up Debian package files
        id: deb-setup
        run: |
          echo "Generating Debian package files..."
          . $VENV_PATH/bin/activate
          python3 tools/deb/gendeb.py || exit 1
          echo "Debian package files generated"

      - name: Build Debian package
        id: deb-build
        run: |
          echo "Building Debian package..."
          dpkg-buildpackage -us -uc -b
          echo "Debian build completed"

      - name: Upload packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deb-packages
          path: ../*.deb

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ../*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
