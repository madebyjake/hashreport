name: Build Packages

on:
  push:
    branches:
      - build-packages
  #release:
    #types: [created]

env:
  PACKAGE_NAME: python3-hashreport
  VENV_PATH: .venv
  PYTHONPATH: ${{ github.workspace }}
  VERSION: ${{ github.event.release.tag_name }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - id: get-version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    strategy:
      matrix:
        include:
          - type: rpm
            image: fedora:latest
            deps: >-
              python3 python3-devel python3-pip python3-setuptools
              rpm-build rpmdevtools rpmlint git
              python3-wheel
            cmd: dnf
          - type: deb
            image: debian:bookworm
            deps: >-
              build-essential debhelper devscripts dh-python python3-all
              python3-pip python3-venv python3-setuptools lintian git
              python3-wheel
            cmd: apt-get

    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install system dependencies
        run: |
          ${{ matrix.cmd }} update -y
          ${{ matrix.cmd }} install -y ${{ matrix.deps }}

      - uses: ./.github/actions/build-package
        with:
          package-type: ${{ matrix.type }}
          version: ${{ needs.prepare.outputs.version }}

      - name: Collect packages
        run: |
          mkdir -p packages
          if [ "${{ matrix.type }}" = "rpm" ]; then
            cp ~/rpmbuild/RPMS/noarch/*.rpm packages/
            cp ~/rpmbuild/SRPMS/*.rpm packages/
          else
            cp ../*.deb packages/
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.type }}-packages
          path: packages/*
          if-no-files-found: error
          retention-days: 7

  release:
    needs: [prepare, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Update release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
