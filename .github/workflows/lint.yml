name: Lint

on:
  push:
    branches: [ main, dev ]
    paths:
      - '**.py'
      - '.flake8'
      - 'pyproject.toml'
  pull_request:
    branches: [ main, dev ]
    paths:
      - '**.py'
      - '.flake8'
      - 'pyproject.toml'

env:
  POETRY_VIRTUALENVS_CREATE: false
  POETRY_VERSION: 1.6.1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history needed for dynamic versioning

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: false

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run flake8
        run: poetry run python -m flake8
