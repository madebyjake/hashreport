{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"<code>hashreport</code>","text":""},{"location":"#overview","title":"Overview","text":"<p>hashreport is a command-line tool that generates comprehensive hash reports for files within a directory. The reports can be output in CSV or JSON formats and include detailed information such as the file name, path, size, hash algorithm, hash value, and last modified date. Designed for speed and efficiency, hashreport can handle large volumes of files and offers filtering options to include or exclude files based on size, type, or name patterns.</p> <p>Beta Release</p> <p>This project is currently in beta. While feature-complete and well-tested, please report any issues you encounter.</p>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code># Install hashreport\npip install hashreport\n\n# Generate a hash report\nhashreport scan /path/to/directory\n</code></pre> <p>See the Workflow Overview for a complete guide to using hashreport.</p>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>Installation - Get started with hashreport</li> <li>Upgrading - Update to the latest version</li> <li>Basic Usage - Basic usage examples</li> <li>Advanced Usage - Advanced features and options</li> <li>Command Reference - Detailed command documentation</li> <li>Configuration - Customize hashreport</li> <li>Troubleshooting - Common issues and solutions</li> </ul>"},{"location":"#features","title":"Features","text":""},{"location":"#core-features","title":"\ud83d\ude80 Core Features","text":"<ul> <li>Multi-threaded processing for fast bulk hash generation</li> <li>Support for multiple hash algorithms (MD5, SHA-256, etc.)</li> <li>Recursive directory traversal</li> <li>Comprehensive file information in reports</li> </ul>"},{"location":"#output-options","title":"\ud83d\udcca Output Options","text":"<ul> <li>CSV and JSON report formats</li> <li>Customizable output location</li> <li>Report viewer and comparison tool</li> <li>Email report delivery via SMTP</li> </ul>"},{"location":"#filtering-capabilities","title":"\ud83d\udd0d Filtering Capabilities","text":"<ul> <li>Filter by file size (min/max)</li> <li>Filter by file type and name patterns</li> <li>Include/exclude file lists</li> <li>Processing limits and controls</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<ol> <li>Installation - Set up hashreport on your system</li> <li>Basic Usage - Learn the fundamentals</li> <li>Command Reference - Detailed command documentation</li> </ol>"},{"location":"#common-use-cases","title":"Common Use Cases","text":""},{"location":"#file-integrity-checking","title":"\ud83d\udd12 File Integrity Checking","text":"<ul> <li>Generate baseline reports</li> <li>Monitor for changes</li> <li>Verify file integrity</li> </ul>"},{"location":"#security-auditing","title":"\ud83d\udee1\ufe0f Security Auditing","text":"<ul> <li>Scan sensitive files</li> <li>Track modifications</li> <li>Generate audit trails</li> </ul>"},{"location":"#backup-verification","title":"\ud83d\udcbe Backup Verification","text":"<ul> <li>Verify backup integrity</li> <li>Compare file states</li> <li>Document changes</li> </ul>"},{"location":"#additional-resources","title":"Additional Resources","text":"<ul> <li>Contributing Guidelines - Help improve hashreport</li> <li>Project Scripts - Development and maintenance tools</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the Affero General Public License v3.0.</p>"},{"location":"#issues-and-feedback","title":"Issues and Feedback","text":"<p>Please report any issues or feedback on the GitHub Issues page.</p>"},{"location":"advanced/","title":"Advanced Usage","text":""},{"location":"advanced/#basic-concepts","title":"Basic Concepts","text":"<p>Before diving into advanced features, make sure you're familiar with the basic functionality:</p> <ul> <li>Basic Directory Scanning - Simple directory scanning</li> <li>Hash Algorithm Selection - Choosing hash algorithms</li> <li>File Type Filtering - Basic file filtering</li> <li>Output Format Selection - Basic report formats</li> <li>File Listing - Basic file listing functionality</li> <li>Report Viewing - Basic report viewing</li> <li>Basic Report Comparison - Simple report comparison</li> </ul>"},{"location":"advanced/#memory-management","title":"Memory Management","text":"<p>Control memory usage through various settings:</p> <pre><code># settings.toml\n[hashreport]\n# Resource monitoring settings\nmemory_threshold = 0.85  # % of total memory\nmmap_threshold = 10485760  # 10MB - Use mmap for files larger than this\nchunk_size = 4096  # bytes\n</code></pre>"},{"location":"advanced/#thread-configuration","title":"Thread Configuration","text":"<p>Optimize thread usage for your system:</p> <pre><code># settings.toml\n[hashreport]\n# Thread pool settings\nmin_workers = 2\nbatch_size = 1000\nmax_retries = 3\nretry_delay = 1.0\nresource_check_interval = 1.0  # seconds\n</code></pre>"},{"location":"advanced/#performance-tuning","title":"Performance Tuning","text":"<p>Fine-tune performance settings:</p> <pre><code># settings.toml\n[hashreport.progress]\nrefresh_rate = 0.1\nshow_eta = true\nshow_file_names = true\nshow_speed = true\n</code></pre>"},{"location":"advanced/#input-validation-and-sanitization","title":"Input Validation and Sanitization","text":"<p>hashreport implements robust input validation and sanitization to ensure safe operation.</p>"},{"location":"advanced/#path-validation","title":"Path Validation","text":"<ul> <li>Absolute and relative paths are supported</li> <li>Path traversal attempts are blocked</li> <li>Special characters are properly escaped</li> <li>Unicode paths are handled correctly</li> </ul>"},{"location":"advanced/#pattern-validation","title":"Pattern Validation","text":"<ul> <li>Glob patterns are validated for syntax</li> <li>Regular expressions are checked for validity</li> <li>Pattern length is limited to prevent DoS</li> <li>Special characters are properly escaped</li> </ul>"},{"location":"advanced/#size-validation","title":"Size Validation","text":"<ul> <li>File size limits are enforced</li> <li>Memory limits are respected</li> <li>Buffer sizes are validated</li> <li>Chunk sizes are checked</li> </ul>"},{"location":"advanced/#email-notifications","title":"Email Notifications","text":"<p>hashreport can email reports upon completion using SMTP.</p>"},{"location":"advanced/#basic-email-setup","title":"Basic Email Setup","text":"<pre><code>hashreport scan /path/to/directory \\\n  --email recipient@example.com \\\n  --smtp-host smtp.example.com \\\n  --smtp-user username \\\n  --smtp-password password\n</code></pre>"},{"location":"advanced/#security-best-practices","title":"Security Best Practices","text":"<ol> <li> <p>Use Environment Variables <pre><code>export HASHREPORT_SMTP_HOST=smtp.example.com\nexport HASHREPORT_SMTP_USER=username\nexport HASHREPORT_SMTP_PASSWORD=password\n</code></pre></p> </li> <li> <p>Use App Passwords</p> </li> <li>For Gmail, use App Passwords instead of account passwords</li> <li> <p>Generate at: Google Account \u2192 Security \u2192 2-Step Verification \u2192 App passwords</p> </li> <li> <p>Use TLS/SSL <pre><code>hashreport scan /path/to/directory \\\n  --email recipient@example.com \\\n  --smtp-host smtp.example.com \\\n  --smtp-port 587 \\\n  --smtp-tls\n</code></pre></p> </li> <li> <p>Secure Configuration File <pre><code># settings.toml\n[hashreport.email_defaults]\nport = 587\nuse_tls = true\nhost = \"smtp.example.com\"\ntimeout = 30\ndefault_subject = \"HashReport Results\"\nretry_attempts = 3\n</code></pre></p> </li> </ol>"},{"location":"advanced/#testing-email-configuration","title":"Testing Email Configuration","text":"<p>Test your email settings without processing files:</p> <pre><code>hashreport scan /path/to/directory \\\n  --email recipient@example.com \\\n  --smtp-host smtp.example.com \\\n  --smtp-user username \\\n  --smtp-password password \\\n  --test-email\n</code></pre>"},{"location":"advanced/#gmail-example","title":"Gmail Example","text":"<p>Using Gmail's SMTP server:</p> <pre><code>hashreport scan /path/to/directory \\\n  --email recipient@gmail.com \\\n  --smtp-host smtp.gmail.com \\\n  --smtp-port 587 \\\n  --smtp-user your.email@gmail.com \\\n  --smtp-password \"your-app-password\"\n</code></pre>"},{"location":"advanced/#pattern-matching","title":"Pattern Matching","text":""},{"location":"advanced/#glob-patterns","title":"Glob Patterns","text":"<p>Use glob patterns to match files:</p> <pre><code># Match all PDF files\nhashreport scan --include \"*.pdf\" /path/to/directory\n\n# Match specific file types\nhashreport scan --include \"*.{jpg,png,gif}\" /path/to/directory\n\n# Exclude temporary files\nhashreport scan --exclude \"*.tmp\" /path/to/directory\n</code></pre>"},{"location":"advanced/#regular-expressions","title":"Regular Expressions","text":"<p>Use regular expressions for more complex patterns:</p> <pre><code># Match files with date in name\nhashreport scan --regex --include \".*\\d{8}.*\" /path/to/directory\n\n# Match specific file extensions\nhashreport scan --regex \\\n  --include \".*\\.(jpg|png)$\" \\\n  --exclude \"thumb.*\\.jpg$\" \\\n  /path/to/directory\n</code></pre>"},{"location":"advanced/#filelist-with-patterns","title":"Filelist with Patterns","text":"<p>The filelist command supports the same pattern matching:</p> <pre><code># List all PDF files\nhashreport filelist --include \"*.pdf\" /path/to/directory\n\n# List files with regex\nhashreport filelist --regex --include \".*\\d{8}.*\" /path/to/directory\n</code></pre>"},{"location":"advanced/#report-generation","title":"Report Generation","text":""},{"location":"advanced/#report-formats","title":"Report Formats","text":"<p>hashreport supports multiple report formats:</p> <pre><code># Generate CSV report (default)\nhashreport scan -f csv /path/to/directory\n\n# Generate JSON report\nhashreport scan -f json /path/to/directory\n\n# Generate both formats\nhashreport scan -f csv -f json /path/to/directory\n</code></pre>"},{"location":"advanced/#report-configuration","title":"Report Configuration","text":"<p>Configure report generation behavior:</p> <pre><code># settings.toml\n[hashreport.reports]\ninclude_metadata = true\ninclude_timing = true\nmax_concurrent_writes = 4\ncompression = false\n</code></pre>"},{"location":"advanced/#custom-report-names","title":"Custom Report Names","text":"<p>Control report filenames:</p> <pre><code># Custom named reports\nhashreport scan /path/to/directory -o custom_report.csv\n\n# Multiple formats with custom names\nhashreport scan /path/to/directory \\\n  -o report.csv \\\n  -f csv -f json\n</code></pre>"},{"location":"advanced/#report-comparison","title":"Report Comparison","text":""},{"location":"advanced/#understanding-changes","title":"Understanding Changes","text":"<p>The comparison functionality identifies several types of changes:</p> <ul> <li>Modified: File exists in both reports but has different hash values</li> <li>Moved: Same file (identical hash) exists in different locations</li> <li>Added: File exists only in the newer report</li> <li>Removed: File exists only in the older report</li> </ul> <pre><code>graph LR\n    A[Old Report] --&gt; D[Comparison Engine]\n    B[New Report] --&gt; D\n    D --&gt; E{Change Detection}\n    E --&gt;|Modified| F[Hash Changed]\n    E --&gt;|Moved| G[Location Changed]\n    E --&gt;|Added| H[New File]\n    E --&gt;|Removed| I[Deleted File]\n    F --&gt; J[Generate Report]\n    G --&gt; J\n    H --&gt; J\n    I --&gt; J\n    J --&gt; K[Output CSV]\n</code></pre>"},{"location":"advanced/#output-format","title":"Output Format","text":"<p>Changes are displayed with bold text for better visibility:</p> <ul> <li>Change type is displayed in bold</li> <li>File paths show the original and new locations</li> <li>Details include hash values and change descriptions</li> <li>Complete path information is shown in separate columns</li> </ul>"},{"location":"advanced/#saving-comparisons","title":"Saving Comparisons","text":"<p>Comparison results can be saved to CSV format:</p> <pre><code>hashreport compare old_report.csv new_report.csv -o /path/to/output/\n</code></pre> <p>The output filename will be generated automatically using the format: <code>compare_&lt;old_report&gt;_&lt;new_report&gt;.csv</code></p>"},{"location":"advanced/#using-with-version-control","title":"Using with Version Control","text":"<p>Example workflow for tracking file changes:</p> <pre><code># Generate initial report\nhashreport scan /path/to/project -o initial_report.csv\n\n# Make changes to files\ngit add .\ngit commit -m \"Update project files\"\n\n# Generate new report\nhashreport scan /path/to/project -o new_report.csv\n\n# Compare reports\nhashreport compare initial_report.csv new_report.csv\n</code></pre> <p>For more information, see: - Basic Usage - Command Reference - Configuration Guide - Troubleshooting</p>"},{"location":"basic/","title":"Basic Usage","text":""},{"location":"basic/#quick-start","title":"Quick Start","text":"<p>Here are some common use cases to get you started quickly:</p>"},{"location":"basic/#1-basic-directory-scan","title":"1. Basic Directory Scan","text":"<p>Generate a hash report for all files in a directory:</p> <pre><code>hashreport scan /path/to/directory\n</code></pre>"},{"location":"basic/#2-scan-with-specific-hash-algorithm","title":"2. Scan with Specific Hash Algorithm","text":"<p>Use SHA-256 for better security:</p> <pre><code>hashreport scan --algorithm sha256 /path/to/directory\n</code></pre>"},{"location":"basic/#3-filter-by-file-type","title":"3. Filter by File Type","text":"<p>Scan only PDF files:</p> <pre><code>hashreport scan --include \"*.pdf\" /path/to/directory\n</code></pre>"},{"location":"basic/#4-generate-multiple-formats","title":"4. Generate Multiple Formats","text":"<p>Create both CSV and JSON reports:</p> <pre><code>hashreport scan -f csv -f json /path/to/directory\n</code></pre>"},{"location":"basic/#command-structure","title":"Command Structure","text":"<p>The basic command structure is:</p> <pre><code>hashreport scan [OPTIONS] DIRECTORY\n</code></pre>"},{"location":"basic/#core-commands","title":"Core Commands","text":""},{"location":"basic/#scanning-a-directory","title":"Scanning a Directory","text":"<p>To scan a directory and generate a hash report:</p> <pre><code>hashreport scan /path/to/directory\n</code></pre>"},{"location":"basic/#choosing-hash-algorithm","title":"Choosing Hash Algorithm","text":"<p>You can specify which hash algorithm to use:</p> <pre><code>hashreport scan --algorithm sha256 /path/to/directory\n</code></pre> <p>To see available hash algorithms:</p> <pre><code>hashreport algorithms\n</code></pre>"},{"location":"basic/#output-formats","title":"Output Formats","text":"<p>hashreport supports CSV (default) and JSON output formats:</p> <pre><code># Generate CSV report (default)\nhashreport scan -f csv /path/to/directory\n\n# Generate JSON report\nhashreport scan -f json /path/to/directory\n\n# Generate both formats\nhashreport scan -f csv -f json /path/to/directory\n</code></pre>"},{"location":"basic/#specifying-output-location","title":"Specifying Output Location","text":"<p>Control where reports are saved:</p> <pre><code>hashreport scan /path/to/directory -o /path/to/output/\n</code></pre>"},{"location":"basic/#filtering-options","title":"Filtering Options","text":""},{"location":"basic/#size-filters","title":"Size Filters","text":"<p>Filter files by size:</p> <pre><code># Files larger than 1MB\nhashreport scan --min-size 1MB /path/to/directory\n\n# Files smaller than 1GB\nhashreport scan --max-size 1GB /path/to/directory\n\n# Files between 1MB and 1GB\nhashreport scan --min-size 1MB --max-size 1GB /path/to/directory\n</code></pre>"},{"location":"basic/#pattern-matching","title":"Pattern Matching","text":"<p>Include or exclude files by pattern:</p> <pre><code># Include only .txt files\nhashreport scan --include \"*.txt\" /path/to/directory\n\n# Exclude .tmp files\nhashreport scan --exclude \"*.tmp\" /path/to/directory\n\n# Use regex patterns\nhashreport scan --regex --include \".*\\.txt$\" /path/to/directory\n</code></pre>"},{"location":"basic/#processing-control","title":"Processing Control","text":"<p>Control how files are processed:</p> <pre><code># Limit number of files\nhashreport scan --limit 100 /path/to/directory\n\n# Disable recursive scanning\nhashreport scan --no-recursive /path/to/directory\n</code></pre>"},{"location":"basic/#file-listing","title":"File Listing","text":"<p>Generate a list of files without calculating hashes:</p> <pre><code>hashreport filelist /path/to/directory\n</code></pre>"},{"location":"basic/#viewing-reports","title":"Viewing Reports","text":"<p>View report contents in a paginated format:</p> <pre><code># View entire report\nhashreport view hashreport_&lt;timestamp&gt;.csv\n\n# Filter report entries\nhashreport view hashreport_&lt;timestamp&gt;.csv -f \"mydoc\"\n</code></pre>"},{"location":"basic/#comparing-reports","title":"Comparing Reports","text":"<p>Compare two reports to identify changes:</p> <pre><code># View differences between reports\nhashreport compare old_report.csv new_report.csv\n\n# Save comparison results\nhashreport compare old_report.csv new_report.csv -o /path/to/output/\n</code></pre> <p>The comparison will show:</p> <ul> <li>Modified files (hash changed)</li> <li>Moved files (same hash, different location)</li> <li>Added files (new in second report)</li> <li>Removed files (missing in second report)</li> </ul>"},{"location":"basic/#configuration-management","title":"Configuration Management","text":"<p>hashreport settings can be managed using the <code>config</code> command:</p>"},{"location":"basic/#view-settings","title":"View Settings","text":"<p>Display current configuration:</p> <pre><code>hashreport config show\n</code></pre>"},{"location":"basic/#edit-settings","title":"Edit Settings","text":"<p>Open settings in your default text editor:</p> <pre><code>hashreport config edit\n</code></pre> <p>The editor used is determined by: 1. $VISUAL environment variable 2. $EDITOR environment variable 3. Platform default (vi/vim on Unix, notepad on Windows)</p> <p>Settings are automatically validated when saved.</p>"},{"location":"basic/#getting-help","title":"Getting Help","text":"<p>For detailed information about available options:</p> <pre><code>hashreport --help\nhashreport scan --help\n</code></pre>"},{"location":"basic/#related-topics","title":"Related Topics","text":""},{"location":"basic/#advanced-features","title":"Advanced Features","text":"<ul> <li>Resource Management - Optimize memory and thread usage</li> <li>Email Notifications - Send reports via email</li> <li>Pattern Matching - Advanced file filtering options</li> <li>Report Generation - Customize report formats and behavior</li> <li>Report Comparison - Advanced comparison features</li> </ul>"},{"location":"basic/#additional-resources","title":"Additional Resources","text":"<ul> <li>Command Reference - Detailed command documentation</li> <li>Configuration Guide - Customize hashreport settings</li> <li>Troubleshooting - Common issues and solutions</li> </ul>"},{"location":"commands/","title":"Command Reference","text":"<p>This document provides detailed information about all available commands in hashreport.</p>"},{"location":"commands/#global-options","title":"Global Options","text":"Option Description <code>--help</code> Show help message and exit <code>--version</code> Show version and exit"},{"location":"commands/#commands","title":"Commands","text":""},{"location":"commands/#scan","title":"scan","text":"<p>Generate a hash report for files in a directory.</p> <pre><code>hashreport scan [OPTIONS] DIRECTORY\n</code></pre>"},{"location":"commands/#options","title":"Options","text":"Option Default Description <code>DIRECTORY</code> - Directory to scan <code>-a, --algorithm</code> <code>sha256</code> Hash algorithm to use <code>-f, --format</code> <code>csv</code> Output format (csv, json) <code>-o, --output</code> - Output directory <code>-r, --recursive</code> <code>True</code> Scan directories recursively <code>-i, --include</code> - Include files matching pattern <code>-e, --exclude</code> - Exclude files matching pattern <code>--regex</code> <code>False</code> Use regex patterns <code>--min-size</code> - Minimum file size <code>--max-size</code> - Maximum file size <code>--limit</code> - Limit number of files <code>--email</code> - Email address for report <code>--smtp-host</code> - SMTP server host <code>--smtp-port</code> - SMTP server port <code>--smtp-user</code> - SMTP username <code>--smtp-password</code> - SMTP password <code>--smtp-tls</code> <code>False</code> Use TLS for SMTP <code>--test-email</code> <code>False</code> Test email configuration"},{"location":"commands/#filelist","title":"filelist","text":"<p>Generate a list of files in a directory.</p> <pre><code>hashreport filelist [OPTIONS] DIRECTORY\n</code></pre>"},{"location":"commands/#options_1","title":"Options","text":"Option Default Description <code>DIRECTORY</code> - Directory to scan <code>-r, --recursive</code> <code>True</code> Scan directories recursively <code>-i, --include</code> - Include files matching pattern <code>-e, --exclude</code> - Exclude files matching pattern <code>--regex</code> <code>False</code> Use regex patterns <code>--min-size</code> - Minimum file size <code>--max-size</code> - Maximum file size <code>--limit</code> - Limit number of files"},{"location":"commands/#view","title":"view","text":"<p>View report contents.</p> <pre><code>hashreport view [OPTIONS] REPORT_FILE\n</code></pre>"},{"location":"commands/#options_2","title":"Options","text":"Option Default Description <code>REPORT_FILE</code> - Report file to view <code>-f, --filter</code> - Filter entries by pattern"},{"location":"commands/#compare","title":"compare","text":"<p>Compare two report files.</p> <pre><code>hashreport compare [OPTIONS] OLD_REPORT NEW_REPORT\n</code></pre>"},{"location":"commands/#options_3","title":"Options","text":"Option Default Description <code>OLD_REPORT</code> - First report file <code>NEW_REPORT</code> - Second report file <code>-o, --output</code> - Output directory"},{"location":"commands/#config","title":"config","text":"<p>Manage configuration settings.</p> <pre><code>hashreport config [OPTIONS] COMMAND\n</code></pre>"},{"location":"commands/#commands_1","title":"Commands","text":"Command Description <code>show</code> Display current configuration <code>edit</code> Edit configuration file"},{"location":"commands/#algorithms","title":"algorithms","text":"<p>List available hash algorithms.</p> <pre><code>hashreport algorithms\n</code></pre>"},{"location":"commands/#examples","title":"Examples","text":""},{"location":"commands/#basic-usage","title":"Basic Usage","text":"<pre><code># Scan directory with default settings\nhashreport scan /path/to/directory\n\n# Scan with specific algorithm\nhashreport scan --algorithm sha512 /path/to/directory\n\n# Generate multiple formats\nhashreport scan -f csv -f json /path/to/directory\n</code></pre>"},{"location":"commands/#advanced-usage","title":"Advanced Usage","text":"<pre><code># Scan with filters\nhashreport scan \\\n  --include \"*.pdf\" \\\n  --exclude \"*.tmp\" \\\n  --min-size 1MB \\\n  --max-size 1GB \\\n  /path/to/directory\n\n# Use regex patterns\nhashreport scan \\\n  --regex \\\n  --include \".*\\d{8}.*\" \\\n  /path/to/directory\n\n# Email report\nhashreport scan \\\n  --email user@example.com \\\n  --smtp-host smtp.example.com \\\n  --smtp-user username \\\n  --smtp-password password \\\n  /path/to/directory\n</code></pre> <p>For more information, see: - Basic Usage - Advanced Usage - Configuration Guide - Troubleshooting</p>"},{"location":"configuration/","title":"Configuration Options","text":"<p>hashreport uses a TOML configuration file to store user settings. The default location is <code>~/.config/hashreport/settings.toml</code>.</p>"},{"location":"configuration/#core-settings","title":"Core Settings","text":"<p>Basic application settings:</p> <pre><code>[hashreport]\n# Hash algorithm and output settings\ndefault_algorithm = \"md5\"\ndefault_format = \"csv\"\nsupported_formats = [\"csv\", \"json\"]\n\n# File processing settings\nchunk_size = 4096\nmmap_threshold = 10485760  # 10MB - Use mmap for files larger than this\ntimestamp_format = \"%y%m%d-%H%M\"\nshow_progress = true\nmax_errors_shown = 10\n</code></pre>"},{"location":"configuration/#core-settings_1","title":"Core Settings","text":"<ul> <li><code>default_algorithm</code>: Default hash algorithm to use (default: \"md5\")</li> <li><code>default_format</code>: Default output format (default: \"csv\")</li> <li><code>supported_formats</code>: List of supported output formats (default: [\"csv\", \"json\"])</li> <li><code>chunk_size</code>: Size of chunks for file reading in bytes (default: 4096)</li> <li><code>mmap_threshold</code>: Size threshold for memory-mapped files in bytes (default: 10485760)</li> <li><code>timestamp_format</code>: Format for timestamps in report filenames (default: \"%y%m%d-%H%M\")</li> <li><code>show_progress</code>: Show progress bar during processing (default: true)</li> <li><code>max_errors_shown</code>: Maximum number of errors to display (default: 10)</li> </ul>"},{"location":"configuration/#resource-management","title":"Resource Management","text":"<p>Control system resource usage:</p> <pre><code>[hashreport]\n# Resource monitoring settings\nmemory_threshold = 0.85  # % of total memory\nmin_workers = 2\nmax_workers = 0  # 0 = Use CPU count\nworker_adjust_interval = 60  # seconds\nmemory_limit = 0  # 0 = 75% of total RAM\nbatch_size = 1000\nmax_retries = 3\nretry_delay = 1.0\nresource_check_interval = 1.0  # seconds\nprogress_update_interval = 0.1  # seconds\n</code></pre>"},{"location":"configuration/#resource-settings","title":"Resource Settings","text":"<ul> <li><code>memory_threshold</code>: Memory usage threshold as percentage of total RAM (default: 0.85)</li> <li><code>min_workers</code>: Minimum number of worker threads (default: 2)</li> <li><code>max_workers</code>: Maximum number of worker threads (default: 0 - uses CPU count)</li> <li><code>worker_adjust_interval</code>: Interval for adjusting worker count in seconds (default: 60)</li> <li><code>memory_limit</code>: Memory limit in MB (default: 0 - uses 75% of total RAM)</li> <li><code>batch_size</code>: Number of files to process in each batch (default: 1000)</li> <li><code>max_retries</code>: Maximum number of retry attempts (default: 3)</li> <li><code>retry_delay</code>: Delay between retries in seconds (default: 1.0)</li> <li><code>resource_check_interval</code>: Interval for resource checks in seconds (default: 1.0)</li> <li><code>progress_update_interval</code>: Interval for progress updates in seconds (default: 0.1)</li> </ul>"},{"location":"configuration/#file-processing","title":"File Processing","text":"<p>Configure file processing behavior:</p> <pre><code>[hashreport]\n# File processing settings\nmin_file_size = \"0B\"\nmax_file_size = \"\"  # Empty string = No limit\ndefault_recursive = true\nignore_hidden_files = true\nignore_system_files = true\nexcluded_directories = [\".git\", \"__pycache__\", \"node_modules\"]\nexcluded_extensions = [\"\"]\n</code></pre>"},{"location":"configuration/#file-processing-settings","title":"File Processing Settings","text":"<ul> <li><code>min_file_size</code>: Minimum file size to process (default: \"0B\")</li> <li><code>max_file_size</code>: Maximum file size to process (default: \"\" - no limit)</li> <li><code>default_recursive</code>: Process subdirectories by default (default: true)</li> <li><code>ignore_hidden_files</code>: Skip hidden files (default: true)</li> <li><code>ignore_system_files</code>: Skip system files (default: true)</li> <li><code>excluded_directories</code>: List of directories to exclude (default: [\".git\", \"pycache\", \"node_modules\"])</li> <li><code>excluded_extensions</code>: List of file extensions to exclude (default: [\"\"])</li> </ul>"},{"location":"configuration/#email-settings","title":"Email Settings","text":"<p>Configure email notification settings:</p> <pre><code>[hashreport.email_defaults]\nport = 587\nuse_tls = true\nhost = \"localhost\"\ntimeout = 30\ndefault_subject = \"HashReport Results\"\nretry_attempts = 3\n</code></pre>"},{"location":"configuration/#email-settings_1","title":"Email Settings","text":"<ul> <li><code>port</code>: SMTP server port (default: 587)</li> <li><code>use_tls</code>: Use TLS for SMTP connection (default: true)</li> <li><code>host</code>: SMTP server hostname (default: \"localhost\")</li> <li><code>timeout</code>: SMTP connection timeout in seconds (default: 30)</li> <li><code>default_subject</code>: Default email subject (default: \"HashReport Results\")</li> <li><code>retry_attempts</code>: Number of email sending retry attempts (default: 3)</li> </ul>"},{"location":"configuration/#logging-settings","title":"Logging Settings","text":"<p>Configure logging behavior:</p> <pre><code>[hashreport.logging]\nlevel = \"INFO\"\nfile_logging = false\nlog_directory = \"logs\"\nmax_log_size = \"10MB\"\nbackup_count = 5\n</code></pre>"},{"location":"configuration/#logging-settings_1","title":"Logging Settings","text":"<ul> <li><code>level</code>: Logging level (default: \"INFO\")</li> <li><code>file_logging</code>: Enable file logging (default: false)</li> <li><code>log_directory</code>: Directory for log files (default: \"logs\")</li> <li><code>max_log_size</code>: Maximum size of log files (default: \"10MB\")</li> <li><code>backup_count</code>: Number of log file backups to keep (default: 5)</li> </ul>"},{"location":"configuration/#progress-display","title":"Progress Display","text":"<p>Configure progress bar behavior:</p> <pre><code>[hashreport.progress]\nrefresh_rate = 0.1\nshow_eta = true\nshow_file_names = true\nshow_speed = true\n</code></pre>"},{"location":"configuration/#progress-settings","title":"Progress Settings","text":"<ul> <li><code>refresh_rate</code>: Progress bar refresh rate in seconds (default: 0.1)</li> <li><code>show_eta</code>: Show estimated time remaining (default: true)</li> <li><code>show_file_names</code>: Show current file being processed (default: true)</li> <li><code>show_speed</code>: Show processing speed (default: true)</li> </ul>"},{"location":"configuration/#report-settings","title":"Report Settings","text":"<p>Configure report generation:</p> <pre><code>[hashreport.reports]\ninclude_metadata = true\ninclude_timing = true\nmax_concurrent_writes = 4\ncompression = false\n</code></pre>"},{"location":"configuration/#report-settings_1","title":"Report Settings","text":"<ul> <li><code>include_metadata</code>: Include file metadata in reports (default: true)</li> <li><code>include_timing</code>: Include timing information in reports (default: true)</li> <li><code>max_concurrent_writes</code>: Maximum number of concurrent report writes (default: 4)</li> <li><code>compression</code>: Enable report compression (default: false)</li> </ul>"},{"location":"configuration/#environment-variables","title":"Environment Variables","text":"<p>For sensitive settings, use environment variables:</p> <pre><code># Email settings\nexport HASHREPORT_SMTP_HOST=smtp.example.com\nexport HASHREPORT_SMTP_USER=username\nexport HASHREPORT_SMTP_PASSWORD=password\n\n# Resource limits\nexport HASHREPORT_MAX_MEMORY=2048\n</code></pre>"},{"location":"configuration/#managing-configuration","title":"Managing Configuration","text":""},{"location":"configuration/#view-current-settings","title":"View Current Settings","text":"<pre><code>hashreport config show\n</code></pre>"},{"location":"configuration/#edit-settings","title":"Edit Settings","text":"<pre><code>hashreport config edit\n</code></pre> <p>The editor used is determined by: 1. $VISUAL environment variable 2. $EDITOR environment variable 3. Platform default (vi/vim on Unix, notepad on Windows)</p> <p>Settings are automatically validated when saved.</p>"},{"location":"contributing/","title":"Contributing Guidelines","text":"<p>Thank you for your interest in contributing to hashreport! This document provides guidelines and instructions for contributing to the project.</p>"},{"location":"contributing/#development-environment-setup","title":"Development Environment Setup","text":""},{"location":"contributing/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.10 or higher</li> <li>Git</li> <li>Poetry (Python package manager)</li> <li>Pre-commit hooks</li> </ul>"},{"location":"contributing/#setting-up-the-development-environment","title":"Setting Up the Development Environment","text":"<ol> <li> <p>Clone the Repository <pre><code>git clone https://github.com/madebyjake/hashreport.git\ncd hashreport\n</code></pre></p> </li> <li> <p>Install Poetry <pre><code>curl -sSL https://install.python-poetry.org | python3 -\n</code></pre></p> </li> <li> <p>Install Dependencies <pre><code>poetry install\n</code></pre></p> </li> <li> <p>Set Up Pre-commit Hooks <pre><code>poetry run pre-commit install\n</code></pre></p> </li> <li> <p>Verify Setup <pre><code>poetry run pytest\n</code></pre></p> </li> </ol>"},{"location":"contributing/#running-tests","title":"Running Tests","text":""},{"location":"contributing/#running-all-tests","title":"Running All Tests","text":"<pre><code># Run tests with coverage\npoetry run pytest --cov=hashreport\n\n# Run tests without coverage\npoetry run pytest\n\n# Run tests with verbose output\npoetry run pytest -v\n</code></pre>"},{"location":"contributing/#running-specific-tests","title":"Running Specific Tests","text":"<pre><code># Run a specific test file\npoetry run pytest tests/test_scanner.py\n\n# Run a specific test function\npoetry run pytest tests/test_scanner.py::test_scan_directory\n\n# Run tests matching a pattern\npoetry run pytest -k \"test_scan\"\n</code></pre>"},{"location":"contributing/#test-coverage","title":"Test Coverage","text":"<pre><code># Generate coverage report\npoetry run pytest --cov=hashreport --cov-report=html\n\n# View coverage in browser\nopen htmlcov/index.html\n</code></pre>"},{"location":"contributing/#code-style","title":"Code Style","text":""},{"location":"contributing/#formatting","title":"Formatting","text":"<p>We use Black for code formatting:</p> <pre><code># Format all Python files\npoetry run black .\n\n# Format a specific file\npoetry run black hashreport/cli.py\n</code></pre>"},{"location":"contributing/#linting","title":"Linting","text":"<p>We use Flake8 for linting:</p> <pre><code># Lint all Python files\npoetry run flake8\n\n# Lint a specific file\npoetry run flake8 hashreport/cli.py\n</code></pre>"},{"location":"contributing/#making-changes","title":"Making Changes","text":""},{"location":"contributing/#1-create-a-branch","title":"1. Create a Branch","text":"<pre><code># Create and switch to a new branch\ngit checkout -b feature/your-feature-name\n\n# Or create a bug fix branch\ngit checkout -b fix/your-bug-fix\n</code></pre>"},{"location":"contributing/#2-make-your-changes","title":"2. Make Your Changes","text":"<ul> <li>Write clear, concise code</li> <li>Add tests for new features</li> <li>Update documentation</li> <li>Follow the code style guidelines</li> </ul>"},{"location":"contributing/#3-commit-your-changes","title":"3. Commit Your Changes","text":"<p>We use conventional commits:</p> <pre><code># Format: type(scope): description\ngit commit -m \"feat(scanner): add memory-mapped file support\"\n</code></pre> <p>Types:</p> Type Description <code>feat</code> New feature <code>fix</code> Bug fix <code>docs</code> Documentation changes <code>style</code> Code style changes <code>refactor</code> Code refactoring <code>test</code> Test changes <code>chore</code> Maintenance tasks"},{"location":"contributing/#4-push-your-changes","title":"4. Push Your Changes","text":"<pre><code>git push origin feature/your-feature-name\n</code></pre>"},{"location":"contributing/#5-create-a-pull-request","title":"5. Create a Pull Request","text":"<ol> <li>Go to the GitHub repository</li> <li>Click \"New Pull Request\"</li> <li>Select your branch</li> <li>Fill in the PR template</li> <li>Submit the PR</li> </ol>"},{"location":"contributing/#documentation","title":"Documentation","text":""},{"location":"contributing/#updating-documentation","title":"Updating Documentation","text":"<ol> <li> <p>Update Source Code Documentation</p> <ul> <li>Add docstrings to new functions</li> <li>Update existing docstrings</li> <li>Follow Google style guide</li> </ul> </li> <li> <p>Update User Documentation</p> <ul> <li>Edit files in the <code>docs/</code> directory</li> <li>Update examples</li> <li>Add new features to relevant sections</li> </ul> </li> <li> <p>Build Documentation <pre><code>poetry run mkdocs build\n</code></pre></p> </li> <li> <p>Preview Documentation <pre><code>poetry run mkdocs serve\n</code></pre></p> </li> </ol>"},{"location":"contributing/#getting-help","title":"Getting Help","text":"<ul> <li>Check the GitHub Issues</li> <li>Join the Discussions</li> <li>Contact the maintainers</li> </ul>"},{"location":"contributing/#license","title":"License","text":"<p>By contributing, you agree that your contributions will be licensed under the project's AGPL-3.0 License.</p>"},{"location":"install/","title":"Installation Guide","text":""},{"location":"install/#installation-methods","title":"Installation Methods","text":"<p>There are two ways to install hashreport on your system. Choose the option that works best for you:</p>"},{"location":"install/#install-with-pip","title":"Install with Pip","text":"<p>You can install hashreport using <code>pip</code> from the Python Package Index (PyPI). This is the recommended method for most users:</p> <pre><code>pip install hashreport\n</code></pre> <p>You can upgrade hashreport using <code>pip</code> with the following commands:</p> <pre><code># Upgrade to the latest version\npip install --upgrade hashreport\n\n# Or upgrade to a specific version\npip install --upgrade hashreport==0.9.0\n</code></pre>"},{"location":"install/#install-from-source","title":"Install from Source","text":""},{"location":"install/#1-download-the-repository","title":"1. Download the Repository","text":"<p>Clone the repository to your local machine using Git and navigate to the project directory:</p> <pre><code>git clone https://github.com/madebyjake/hashreport.git &amp;&amp; cd hashreport\n</code></pre> <p>Alternatively, you can download the repository as a ZIP file and extract it to a folder on your machine.</p>"},{"location":"install/#2-install-dependencies","title":"2. Install Dependencies","text":"<p>First we'll install Poetry, a Python packaging and dependency management tool. There are a few ways to do this, but the recommended method is to use the installer script:</p> <pre><code>curl -sSL https://install.python-poetry.org | python3 -\n</code></pre> <p>Next, install the project dependencies using Poetry:</p> <pre><code>poetry install\n</code></pre>"},{"location":"install/#3-run-the-application","title":"3. Run the Application","text":"<p>You can now run the application using Poetry:</p> <pre><code>poetry run hashreport --version\n</code></pre>"},{"location":"install/#verification","title":"Verification","text":"<p>After installation, verify that hashreport is working correctly:</p> <pre><code># Check version\nhashreport --version\n\n# Run a test scan\nhashreport scan --test /tmp\n</code></pre>"},{"location":"install/#next-steps","title":"Next Steps","text":"<p>After successful installation:</p> <ol> <li>Review the Quick Start Guide</li> <li>Learn about Basic Usage</li> <li>Explore Advanced Features</li> <li>Configure your Settings</li> </ol>"},{"location":"install/#troubleshooting","title":"Troubleshooting","text":""},{"location":"install/#common-installation-issues","title":"Common Installation Issues","text":""},{"location":"install/#1-python-version-issues","title":"1. Python Version Issues","text":"<p>If you see an error about Python version compatibility:</p> <pre><code># Check your Python version\npython3 --version\n\n# If needed, install Python 3.10 or higher\n\n## On Ubuntu/Debian:\nsudo apt update &amp;&amp; \\\nsudo apt install python3.10\n\n## On Fedora/CentOS/RHEL:\nsudo dnf update &amp;&amp; \\\nsudo dnf install python3.10\n\n## On macOS with Homebrew:\nbrew install python@3.10\n</code></pre>"},{"location":"install/#2-permission-issues","title":"2. Permission Issues","text":"<p>If you encounter permission errors:</p> <pre><code># For pip installation\npip install --user hashreport\n\n# For Poetry installation\npoetry config virtualenvs.in-project true\n</code></pre>"},{"location":"install/#3-poetry-installation-issues","title":"3. Poetry Installation Issues","text":"<p>If Poetry installation fails:</p> <pre><code># Try alternative installation method\npython3 -m pip install poetry\n\n# Or use pipx (recommended)\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install poetry\n</code></pre>"},{"location":"install/#4-virtual-environment-issues","title":"4. Virtual Environment Issues","text":"<p>If you have problems with virtual environments:</p> <pre><code># Create a new virtual environment\npython3 -m venv .venv\n\n# Activate it\nsource .venv/bin/activate  # On Unix/macOS\n.venv\\Scripts\\activate     # On Windows\n\n# Install hashreport\npip install hashreport\n</code></pre>"},{"location":"install/#getting-help","title":"Getting Help","text":"<p>If you're still experiencing issues:</p> <ol> <li>Check the GitHub Issues for known problems</li> <li>Review the Troubleshooting Guide for more detailed solutions</li> <li>Create a new issue with:</li> <li>Your operating system and version</li> <li>Python version (<code>python3 --version</code>)</li> <li>Full error message</li> <li>Steps to reproduce the issue</li> </ol>"},{"location":"scripts/","title":"Project Scripts","text":"<p>The scripts directory contains scripts that can be used for various common project actions. These scripts are intended to be run from the project root directory.</p>"},{"location":"scripts/#run-script","title":"Run Script","text":"<p><code>scripts/run.sh</code></p> <p>The <code>run.sh</code> script is the main entry point for running project scripts, however, the scripts in the <code>actions</code> directory can also be run directly if desired.</p>"},{"location":"scripts/#options","title":"Options","text":"<p>The <code>run.sh</code> script provides a quick way to run various project actions. The following options are available:</p> <ul> <li><code>-h</code>, <code>--help</code>: show help message and exit</li> <li><code>test</code>: run tests with coverage</li> <li><code>security</code>: check for security issues</li> <li><code>lint</code>: lint the code</li> <li><code>format</code>: format code</li> <li><code>install</code>: install dependencies</li> <li><code>setup-hooks</code>: setup pre-commit hooks</li> <li><code>pre-commit</code>: run pre-commit hooks</li> </ul>"},{"location":"scripts/#usage","title":"Usage","text":""},{"location":"scripts/#interactive","title":"Interactive","text":"<p>The <code>run.sh</code> script can also be run in interactive mode. To do this, simply run the script without any options:</p> <pre><code>bash scripts/run.sh\n</code></pre> <p>This will prompt you to select an action to run.</p>"},{"location":"scripts/#non-interactive","title":"Non-Interactive","text":"<p>To run a specific action without being prompted, you can pass the action as an option:</p> <pre><code>bash scripts/run.sh [OPTION] [FLAGS]\n</code></pre> <p>For example, to run tests with coverage:</p> <pre><code>bash scripts/run.sh test\n</code></pre>"},{"location":"troubleshooting/","title":"Troubleshooting Guide","text":"<p>This guide helps you resolve common issues with hashreport. If you're still experiencing problems, please check the GitHub Issues or create a new issue.</p>"},{"location":"troubleshooting/#installation-issues","title":"Installation Issues","text":""},{"location":"troubleshooting/#python-version-compatibility","title":"Python Version Compatibility","text":"<p>Problem: Error about Python version compatibility Solution: Ensure you're using Python 3.10 or higher</p> <pre><code># Check Python version\npython3 --version\n\n# Install Python 3.10 or higher on macOS\nbrew install python@3.10\n\n# Install Python 3.10 or higher on Ubuntu/Debian\nsudo apt install python3.10\n\n# Install Python 3.10 or higher on Fedora/CentOS/RHEL\nsudo dnf install python3.10\n</code></pre>"},{"location":"troubleshooting/#poetry-installation","title":"Poetry Installation","text":"<p>Problem: Poetry installation fails Solution: Try alternative installation methods</p> <pre><code># Install with pip\npython3 -m pip install poetry\n\n# Or use pipx (recommended)\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install poetry\n</code></pre>"},{"location":"troubleshooting/#permission-issues","title":"Permission Issues","text":"<p>Problem: Permission denied during installation Solution: Use user installation or virtual environment</p> <pre><code># Install for current user only\npip install --user hashreport\n\n# Or use virtual environment\npython3 -m venv hashreport_env\nsource hashreport_env/bin/activate  # On Unix/macOS\nhashreport_env\\Scripts\\activate     # On Windows\npip install hashreport\n</code></pre>"},{"location":"troubleshooting/#file-access-issues","title":"File Access Issues","text":""},{"location":"troubleshooting/#permission-denied","title":"Permission Denied","text":"<p>Problem: Cannot access files or directories Solution: Check file permissions</p> <pre><code># Check directory permissions\nls -la /path/to/directory\n\n# Check file permissions\nls -la /path/to/file\n\n# Fix permissions if needed\nchmod 644 /path/to/file\nchmod 755 /path/to/directory\n</code></pre>"},{"location":"troubleshooting/#path-issues","title":"Path Issues","text":"<p>Problem: Invalid or inaccessible paths Solution: Verify path format and existence</p> <pre><code># Use absolute paths\nhashreport scan /absolute/path/to/directory\n\n# Check path existence\nls /path/to/directory\n\n# Handle spaces in paths\nhashreport scan \"/path/with spaces/directory\"\n\n# Handle special characters\nhashreport scan \"/path/with\\*special\\?chars/\"\n</code></pre>"},{"location":"troubleshooting/#symbolic-links","title":"Symbolic Links","text":"<p>Problem: Issues with symbolic links Solution: Check link validity and permissions</p> <pre><code># Check if symbolic link is valid\nls -la /path/to/symlink\n\n# Follow symbolic links manually\nhashreport scan $(readlink -f /path/to/symlink)\n\n# Or scan the target directory directly\nhashreport scan /actual/target/directory\n</code></pre>"},{"location":"troubleshooting/#memory-and-performance-issues","title":"Memory and Performance Issues","text":""},{"location":"troubleshooting/#out-of-memory","title":"Out of Memory","text":"<p>Problem: Process runs out of memory Solution: Adjust memory settings</p> <pre><code># ~/.config/hashreport/settings.toml\n[hashreport]\n# Reduce memory usage\nmemory_threshold = 0.70  # Lower threshold\nbatch_size = 500         # Smaller batches\nchunk_size = 2048        # Smaller chunks\nmmap_threshold = 5242880 # 5MB - Use mmap for smaller files\n</code></pre>"},{"location":"troubleshooting/#slow-performance","title":"Slow Performance","text":"<p>Problem: Processing is very slow Solution: Optimize settings for your system</p> <pre><code># ~/.config/hashreport/settings.toml\n[hashreport]\n# Increase performance\nmax_workers = 8          # More workers\nbatch_size = 2000        # Larger batches\nresource_check_interval = 2.0  # Less frequent checks\n</code></pre>"},{"location":"troubleshooting/#high-cpu-usage","title":"High CPU Usage","text":"<p>Problem: Excessive CPU usage Solution: Reduce worker count and adjust settings</p> <pre><code># ~/.config/hashreport/settings.toml\n[hashreport]\n# Reduce CPU usage\nmax_workers = 4          # Fewer workers\nmin_workers = 1          # Lower minimum\nresource_check_interval = 5.0  # Less frequent monitoring\n</code></pre>"},{"location":"troubleshooting/#email-issues","title":"Email Issues","text":""},{"location":"troubleshooting/#smtp-connection-failed","title":"SMTP Connection Failed","text":"<p>Problem: Cannot connect to SMTP server Solution: Check SMTP settings</p> <pre><code># Test SMTP connection\nhashreport scan /tmp --test-email \\\n  --email test@example.com \\\n  --smtp-host smtp.example.com \\\n  --smtp-port 587 \\\n  --smtp-tls\n\n# Common SMTP settings\n# Gmail: smtp.gmail.com:587 (TLS)\n# Outlook: smtp-mail.outlook.com:587 (TLS)\n# Yahoo: smtp.mail.yahoo.com:587 (TLS)\n</code></pre>"},{"location":"troubleshooting/#authentication-failed","title":"Authentication Failed","text":"<p>Problem: SMTP authentication error Solution: Check credentials and use app passwords</p> <pre><code># For Gmail, use App Passwords\n# 1. Enable 2-factor authentication\n# 2. Generate app password at: Google Account \u2192 Security \u2192 App passwords\n# 3. Use app password instead of account password\n\nhashreport scan /path/to/directory \\\n  --email recipient@gmail.com \\\n  --smtp-host smtp.gmail.com \\\n  --smtp-port 587 \\\n  --smtp-user your.email@gmail.com \\\n  --smtp-password \"your-app-password\" \\\n  --smtp-tls\n</code></pre>"},{"location":"troubleshooting/#email-not-sent","title":"Email Not Sent","text":"<p>Problem: No error but email not received Solution: Check spam folder and email settings</p> <pre><code># Test with verbose output\nhashreport scan /tmp --test-email \\\n  --email test@example.com \\\n  --smtp-host smtp.example.com \\\n  --smtp-user username \\\n  --smtp-password password \\\n  --smtp-tls\n\n# Check email server logs if available\n</code></pre>"},{"location":"troubleshooting/#report-generation-issues","title":"Report Generation Issues","text":""},{"location":"troubleshooting/#invalid-report-format","title":"Invalid Report Format","text":"<p>Problem: Error creating report file Solution: Check output directory and permissions</p> <pre><code># Ensure output directory exists\nmkdir -p /path/to/output\n\n# Check write permissions\nls -la /path/to/output\n\n# Use absolute paths\nhashreport scan /path/to/directory -o /absolute/path/to/report.csv\n</code></pre>"},{"location":"troubleshooting/#large-report-files","title":"Large Report Files","text":"<p>Problem: Reports are too large to handle Solution: Use filtering and limits</p> <pre><code># Limit number of files\nhashreport scan /path/to/directory --limit 1000\n\n# Filter by file type\nhashreport scan /path/to/directory --include \"*.pdf\"\n\n# Filter by size\nhashreport scan /path/to/directory --min-size 1KB --max-size 100MB\n</code></pre>"},{"location":"troubleshooting/#report-comparison-issues","title":"Report Comparison Issues","text":"<p>Problem: Cannot compare reports Solution: Check report format and structure</p> <pre><code># Verify report files exist\nls -la report1.csv report2.csv\n\n# Check report format\nhead -5 report1.csv\n\n# Ensure reports have same structure\nhashreport view report1.csv\nhashreport view report2.csv\n</code></pre>"},{"location":"troubleshooting/#configuration-issues","title":"Configuration Issues","text":""},{"location":"troubleshooting/#invalid-configuration","title":"Invalid Configuration","text":"<p>Problem: Configuration validation errors Solution: Check and fix configuration</p> <pre><code># View current configuration\nhashreport config show\n\n# Edit configuration\nhashreport config edit\n\n# Reset to defaults (backup first)\ncp ~/.config/hashreport/settings.toml ~/.config/hashreport/settings.toml.backup\nrm ~/.config/hashreport/settings.toml\nhashreport config show  # Creates new default config\n</code></pre>"},{"location":"troubleshooting/#configuration-not-found","title":"Configuration Not Found","text":"<p>Problem: Configuration file not found Solution: Create configuration directory</p> <pre><code># Create configuration directory\nmkdir -p ~/.config/hashreport\n\n# Generate default configuration\nhashreport config show\n\n# Or copy default configuration\ncp /path/to/hashreport/default_config.toml ~/.config/hashreport/settings.toml\n</code></pre>"},{"location":"troubleshooting/#pattern-matching-issues","title":"Pattern Matching Issues","text":""},{"location":"troubleshooting/#invalid-regex-patterns","title":"Invalid Regex Patterns","text":"<p>Problem: Regex pattern errors Solution: Test and fix patterns</p> <pre><code># Test regex pattern in Python\npython3 -c \"import re; re.compile('.*\\\\.txt$')\"\n\n# Use simpler patterns\nhashreport scan /path/to/directory --include \"*.txt\"\n\n# Escape special characters\nhashreport scan /path/to/directory --regex --include \".*\\\\.txt$\"\n</code></pre>"},{"location":"troubleshooting/#pattern-not-matching","title":"Pattern Not Matching","text":"<p>Problem: Expected files not included/excluded Solution: Check pattern syntax and test</p> <pre><code># Test pattern with filelist command\nhashreport filelist /path/to/directory --include \"*.pdf\"\n\n# Use verbose output to see what's being processed\nhashreport scan /path/to/directory --include \"*.pdf\" --limit 10\n</code></pre>"},{"location":"troubleshooting/#threading-and-concurrency-issues","title":"Threading and Concurrency Issues","text":""},{"location":"troubleshooting/#too-many-open-files","title":"Too Many Open Files","text":"<p>Problem: \"Too many open files\" error Solution: Reduce worker count and batch size</p> <pre><code># ~/.config/hashreport/settings.toml\n[hashreport]\n# Reduce file handles\nmax_workers = 4          # Fewer workers\nbatch_size = 100         # Smaller batches\n</code></pre>"},{"location":"troubleshooting/#thread-pool-exhaustion","title":"Thread Pool Exhaustion","text":"<p>Problem: Thread pool errors Solution: Adjust thread settings</p> <pre><code># ~/.config/hashreport/settings.toml\n[hashreport]\n# Adjust thread settings\nmin_workers = 1          # Lower minimum\nmax_workers = 4          # Lower maximum\nresource_check_interval = 2.0  # Less frequent checks\n</code></pre>"},{"location":"troubleshooting/#common-error-messages","title":"Common Error Messages","text":""},{"location":"troubleshooting/#file-not-found","title":"\"File not found\"","text":"<p>Solution: Verify file path and permissions <pre><code>ls -la /path/to/file\nfile /path/to/file\n</code></pre></p>"},{"location":"troubleshooting/#invalid-hash-algorithm","title":"\"Invalid hash algorithm\"","text":"<p>Solution: Check available algorithms <pre><code>hashreport algorithms\n</code></pre></p>"},{"location":"troubleshooting/#permission-denied_1","title":"\"Permission denied\"","text":"<p>Solution: Check file and directory permissions <pre><code>ls -la /path/to/directory\nchmod 755 /path/to/directory\n</code></pre></p>"},{"location":"troubleshooting/#memory-error","title":"\"Memory error\"","text":"<p>Solution: Reduce memory usage <pre><code># ~/.config/hashreport/settings.toml\n[hashreport]\nmemory_threshold = 0.70\nbatch_size = 500\n</code></pre></p>"},{"location":"troubleshooting/#timeout-error","title":"\"Timeout error\"","text":"<p>Solution: Increase timeout settings <pre><code># ~/.config/hashreport/settings.toml\n[hashreport.email_defaults]\ntimeout = 60  # Increase timeout\n</code></pre></p>"},{"location":"troubleshooting/#platform-specific-issues","title":"Platform-Specific Issues","text":""},{"location":"troubleshooting/#windows-issues","title":"Windows Issues","text":"<p>Problem: Path separator issues Solution: Use proper path format</p> <pre><code># Use forward slashes or escaped backslashes\nhashreport scan C:/path/to/directory\nhashreport scan \"C:\\\\path\\\\to\\\\directory\"\n</code></pre>"},{"location":"troubleshooting/#macos-issues","title":"macOS Issues","text":"<p>Problem: Permission issues with system directories Solution: Grant necessary permissions</p> <pre><code># Grant full disk access to terminal\n# System Preferences \u2192 Security &amp; Privacy \u2192 Privacy \u2192 Full Disk Access\n\n# Or use user directories\nhashreport scan ~/Documents\n</code></pre>"},{"location":"troubleshooting/#linux-issues","title":"Linux Issues","text":"<p>Problem: SELinux or AppArmor restrictions Solution: Check security policies</p> <pre><code># Check SELinux status\nsestatus\n\n# Check AppArmor status\naa-status\n\n# Temporarily disable if needed (not recommended for production)\n</code></pre>"},{"location":"troubleshooting/#getting-more-help","title":"Getting More Help","text":""},{"location":"troubleshooting/#enable-debug-logging","title":"Enable Debug Logging","text":"<pre><code># Set debug level\nexport HASHREPORT_LOG_LEVEL=DEBUG\n\n# Run with debug output\nhashreport scan /path/to/directory\n</code></pre>"},{"location":"troubleshooting/#create-detailed-issue-report","title":"Create Detailed Issue Report","text":"<p>When creating an issue, include:</p> <ol> <li> <p>System Information <pre><code>uname -a\npython3 --version\nhashreport --version\n</code></pre></p> </li> <li> <p>Error Messages</p> </li> <li>Full error output</li> <li>Any log files</li> <li> <p>Stack traces</p> </li> <li> <p>Steps to Reproduce</p> </li> <li>Exact commands used</li> <li>File structure</li> <li> <p>Expected vs actual behavior</p> </li> <li> <p>Configuration <pre><code>hashreport config show\n</code></pre></p> </li> </ol>"},{"location":"troubleshooting/#useful-debugging-commands","title":"Useful Debugging Commands","text":"<pre><code># Test basic functionality\nhashreport --version\nhashreport algorithms\n\n# Test file access\nhashreport filelist /tmp --limit 5\n\n# Test report generation\nhashreport scan /tmp --limit 1\n\n# Test configuration\nhashreport config show\n</code></pre>"},{"location":"troubleshooting/#community-resources","title":"Community Resources","text":"<ul> <li>GitHub Issues</li> <li>GitHub Discussions</li> <li>Documentation</li> </ul>"},{"location":"troubleshooting/#performance-optimization","title":"Performance Optimization","text":""},{"location":"troubleshooting/#for-large-directories","title":"For Large Directories","text":"<pre><code># ~/.config/hashreport/settings.toml\n[hashreport]\n# Optimize for large directories\nmax_workers = 8\nbatch_size = 2000\nmemory_threshold = 0.90\nmmap_threshold = 20971520  # 20MB\n</code></pre>"},{"location":"troubleshooting/#for-small-files","title":"For Small Files","text":"<pre><code># ~/.config/hashreport/settings.toml\n[hashreport]\n# Optimize for many small files\nmax_workers = 4\nbatch_size = 500\nchunk_size = 1024\nmmap_threshold = 1048576   # 1MB\n</code></pre>"},{"location":"troubleshooting/#for-network-drives","title":"For Network Drives","text":"<pre><code># ~/.config/hashreport/settings.toml\n[hashreport]\n# Optimize for network drives\nmax_workers = 2\nbatch_size = 100\nchunk_size = 8192\nresource_check_interval = 5.0\n</code></pre>"},{"location":"upgrade/","title":"Upgrade Guide","text":""},{"location":"upgrade/#upgrade-methods","title":"Upgrade Methods","text":"<p>There are several ways to upgrade hashreport to a new version. Choose the method that matches your original installation:</p>"},{"location":"upgrade/#upgrade-with-pip","title":"Upgrade with Pip","text":"<p>If you installed hashreport using <code>pip</code>, you can upgrade it using the following commands:</p> <pre><code># Upgrade to the latest version\npip install --upgrade hashreport\n\n# Or upgrade to a specific version\npip install --upgrade hashreport==1.0.0\n\n# Check current version before upgrading\nhashreport --version\n\n# Verify the upgrade was successful\nhashreport --version\n</code></pre>"},{"location":"upgrade/#upgrade-from-source","title":"Upgrade from Source","text":"<p>If you installed hashreport from source, you can upgrade by updating the repository and reinstalling:</p>"},{"location":"upgrade/#1-update-the-repository","title":"1. Update the Repository","text":"<p>Navigate to your hashreport directory and pull the latest changes:</p> <pre><code>cd /path/to/hashreport\ngit pull origin main\n</code></pre>"},{"location":"upgrade/#2-update-dependencies","title":"2. Update Dependencies","text":"<p>Update the project dependencies using Poetry:</p> <pre><code>poetry update\n</code></pre>"},{"location":"upgrade/#3-reinstall-the-application","title":"3. Reinstall the Application","text":"<p>Reinstall the application to ensure all changes are applied:</p> <pre><code>poetry install\n</code></pre>"},{"location":"upgrade/#4-verify-the-upgrade","title":"4. Verify the Upgrade","text":"<p>Check that the upgrade was successful:</p> <pre><code>poetry run hashreport --version\n</code></pre>"},{"location":"upgrade/#upgrade-with-poetry-development","title":"Upgrade with Poetry (Development)","text":"<p>If you're using Poetry for development:</p> <pre><code># Update dependencies\npoetry update\n\n# Reinstall the package\npoetry install\n\n# Verify version\npoetry run hashreport --version\n</code></pre>"},{"location":"upgrade/#version-checking","title":"Version Checking","text":"<p>Before upgrading, it's always good practice to check your current version:</p> <pre><code># Check current version\nhashreport --version\n\n# Check available versions on PyPI\npip index versions hashreport\n</code></pre>"},{"location":"upgrade/#pre-upgrade-checklist","title":"Pre-Upgrade Checklist","text":"<p>Before upgrading, consider the following:</p> <ol> <li>Backup Configuration: Save your current configuration files</li> <li>Check Compatibility: Review the changelog for breaking changes</li> <li>Test Environment: Consider testing the upgrade in a non-production environment first</li> <li>Dependencies: Ensure your Python version meets the new requirements</li> </ol>"},{"location":"upgrade/#post-upgrade-verification","title":"Post-Upgrade Verification","text":"<p>After upgrading, verify that everything is working correctly:</p> <pre><code># Check version\nhashreport --version\n\n# Test basic functionality\nhashreport scan --test /tmp\n\n# Verify configuration still works\nhashreport config --show\n</code></pre>"},{"location":"upgrade/#next-steps","title":"Next Steps","text":"<p>After successful upgrade:</p> <ol> <li>Review the Changelog for new features</li> <li>Check Configuration for new options</li> <li>Explore Advanced Features for new capabilities</li> <li>Review Troubleshooting if you encounter issues</li> </ol>"},{"location":"upgrade/#troubleshooting","title":"Troubleshooting","text":""},{"location":"upgrade/#common-upgrade-issues","title":"Common Upgrade Issues","text":""},{"location":"upgrade/#1-permission-errors","title":"1. Permission Errors","text":"<p>If you encounter permission errors during upgrade:</p> <pre><code># For pip installation\npip install --user --upgrade hashreport\n\n# For Poetry installation\npoetry config virtualenvs.in-project true\npoetry install\n</code></pre>"},{"location":"upgrade/#2-dependency-conflicts","title":"2. Dependency Conflicts","text":"<p>If you see dependency conflicts:</p> <pre><code># Check for conflicting packages\npip check\n\n# Try upgrading with --force-reinstall\npip install --upgrade --force-reinstall hashreport\n\n# For Poetry, try updating all dependencies\npoetry update --all\n</code></pre>"},{"location":"upgrade/#3-version-compatibility-issues","title":"3. Version Compatibility Issues","text":"<p>If the new version has compatibility issues:</p> <pre><code># Downgrade to previous version\npip install --upgrade hashreport==0.9.0\n\n# Or install a specific working version\npip install hashreport==0.8.5\n</code></pre>"},{"location":"upgrade/#4-configuration-file-issues","title":"4. Configuration File Issues","text":"<p>If your configuration files are no longer compatible:</p> <pre><code># Backup old config\ncp ~/.config/hashreport/config.toml ~/.config/hashreport/config.toml.backup\n\n# Generate new default config\nhashreport config --init\n\n# Manually merge your custom settings\n</code></pre>"},{"location":"upgrade/#5-poetry-environment-issues","title":"5. Poetry Environment Issues","text":"<p>If Poetry upgrade fails:</p> <pre><code># Clear Poetry cache\npoetry cache clear . --all\n\n# Remove and recreate virtual environment\npoetry env remove python\npoetry install\n</code></pre>"},{"location":"upgrade/#getting-help","title":"Getting Help","text":"<p>If you're still experiencing upgrade issues:</p> <ol> <li>Check the GitHub Issues for known problems</li> <li>Review the Troubleshooting Guide for more detailed solutions</li> <li>Check the Changelog for breaking changes</li> <li>Create a new issue with:</li> <li>Your current hashreport version</li> <li>Target version you're trying to upgrade to</li> <li>Your operating system and Python version</li> <li>Full error message</li> <li>Steps to reproduce the issue</li> </ol>"},{"location":"development/scripts/","title":"Project Scripts","text":"<p>The scripts directory contains scripts that can be used for various common project actions. These scripts are intended to be run from the project root directory.</p>"},{"location":"development/scripts/#run-script","title":"Run Script","text":"<p><code>scripts/run.sh</code></p> <p>The <code>run.sh</code> script is the main entry point for running project scripts, however, the scripts in the <code>actions</code> directory can also be run directly if desired.</p>"},{"location":"development/scripts/#options","title":"Options","text":"<p>The <code>run.sh</code> script provides a quick way to run various project actions. The following options are available:</p> <ul> <li><code>-h</code>, <code>--help</code>: show help message and exit</li> <li><code>test</code>: run tests with coverage</li> <li><code>security</code>: check for security issues</li> <li><code>lint</code>: lint the code</li> <li><code>format</code>: format code</li> <li><code>install</code>: install dependencies</li> <li><code>setup-hooks</code>: setup pre-commit hooks</li> <li><code>pre-commit</code>: run pre-commit hooks</li> </ul>"},{"location":"development/scripts/#usage","title":"Usage","text":""},{"location":"development/scripts/#interactive","title":"Interactive","text":"<p>The <code>run.sh</code> script can also be run in interactive mode. To do this, simply run the script without any options:</p> <pre><code>bash scripts/run.sh\n</code></pre> <p>This will prompt you to select an action to run.</p>"},{"location":"development/scripts/#non-interactive","title":"Non-Interactive","text":"<p>To run a specific action without being prompted, you can pass the action as an option:</p> <pre><code>bash scripts/run.sh [OPTION] [FLAGS]\n</code></pre> <p>For example, to run tests with coverage:</p> <pre><code>bash scripts/run.sh test\n</code></pre>"}]}