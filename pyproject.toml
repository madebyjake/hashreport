[tool.poetry]
name = "hashreport"
version = "0.1.0"
description = "hashreport"
license = "AGPL-3.0"
authors = ["Jake Wells <jake@example.com>"]
keywords = [
  "checksum",
  "file",
  "hash",
  "hashing",
  "integrity",
  "report",
  "security",
  "utility",
  "verification"
]
classifiers = [
  "Development Status :: 1 - Planning",
  "Environment :: Console",
  "Intended Audience :: Information Technology",
  "License :: OSI Approved :: GNU Affero General Public License v3",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Security",
  "Topic :: Utilities"
]

[tool.poetry.urls]
Documentation = "https://github.com/madebyjake/hashreport"
Repository = "https://github.com/madebyjake/hashreport"
Issues = "https://github.com/madebyjake/hashreport/issues"

[tool.poetry.scripts]
hashreport = "hashreport.cli:cli"

[tool.poetry.dependencies]
click = "^8.1.8"
python = ">=3.10,<3.14"
rich = "^13.9.4"
tomli = "^2.2.1"
tqdm = "^4.67.1"
typing-extensions = "^4.12.2"

[tool.poetry.group.dev.dependencies]
bandit = "^1.8.2"
black = "^24.10.0"
commitizen = "^4.1.0"
flake8 = "^7.1.1"
flake8-bugbear = "^24.12.12"
flake8-docstrings = "^1.7.0"
flake8-isort = "^6.1.1"
isort = "^5.13.2"
pytest = "^8.3.4"
pytest-cov = "^6.0.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-macros-plugin = "^1.3.7"
mkdocs-material = "^9.5.50"
mkdocstrings = "^0.27.0"
mkdocstrings-python = "^1.13.0"
pygments = "^2.19.1"
pymdown-extensions = "^10.14"

[tool.black]
line-length = 88

[tool.commitizen]
name = "cz_conventional_commits"
version_provider = "poetry"
tag_format = "v$version"

[tool.coverage.run]
branch = true
source = ["hashreport"]

[tool.coverage.report]
#fail_under = 80
show_missing = true

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = [
    "tests",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
